Isabella ValdescruzLab 1 Write Up EECS 3391-28-2015	I would like to start this write up by saying I thought the lab was absolutely impossible. I have spent around 60 hours on it, which is extremely frustrating since I do not feel satisfied with my final result. I think the concept of Iterator should be explained much more, as I had never worked with them (or Java for that manner) and they are so crucial to the final stages of this lab. Up until the iterators were needed I was struggling, but felt like it was manageable. Once we needed to write HeapPageIterator(), however, I felt extremely lost. Eventually after many hours of agony, I was able to pass all of the systems tests so I am incredibly excited for that.	With that being said, I think my implementation is terribly inefficient. I used numerous for loops and array scanning due to my unfamiliarity with java. To implement TupleDesc, I created an array of TDItem objects as the base data structure versus two separate arrays of the TupleDesc’s types and field names. This is because TDItem keeps all the relevant information on a tuple’s schema in one place. Moving forward to the Tuple class, I implemented an array of Fields as my basic data structure since that is essentially what a tuple is. For the catalog class, I created a separate Table class that consisted of the DBFile, the name of the table, and a primary key fieldname. I also implemented a tableID variable in this class that was equal to the file.getID() function in order to only have one data structure in my catalog class, an array of tables, with the unique file id already linked to the table via the constructor instead of creating a hash map. For the buffer pool class I decided to step away from arrays and try implementing a hash map that mapped a page id number to a page that was cached in the buffer pool. In order to produce the correct numbers for the getNumTuples and the HeaderSize, I had to be sure to be dividing by 8.0, not just 8 since I was using math functions like ceiling and floor, which require doubles as their inputs. For the heapPageIterator and the HeapFileIterator I also created a separate class in order to implement the iterator functions. 	In conclusion, I have passed all systems test that are required in this lab, but it was not without an insane amount of work and time put into it. 